import{m as c,x as d,o as s,f as a,b as i,t as n,r as m,g as p,j as _,p as f}from"./app-ctv0rznj.js";const g={class:"mt-1"},y={class:"text-sm text-red-600"},V={__name:"InputError",props:{message:{type:String}},setup(e){return(o,t)=>c((s(),a("div",g,[i("p",y,n(e.message),1)],512)),[[d,e.message]])}},h={class:"block font-medium text-sm capitalize text-gray-700"},v={key:0},x={key:1},b={key:2,class:"text-red-600"},B={__name:"InputLabel",props:{value:{type:[String,Number,Boolean],required:!0},required:{type:Boolean,default:!1}},setup(e){return(o,t)=>(s(),a("label",h,[e.value?(s(),a("span",v,n(e.value),1)):(s(),a("span",x,[m(o.$slots,"default")])),e.required?(s(),a("span",b,"*")):p("",!0)]))}},k=["value"],S={__name:"TextInput",props:["modelValue"],emits:["update:modelValue"],setup(e,{expose:o}){const t=_(null);return f(()=>{t.value.hasAttribute("autofocus")&&t.value.focus()}),o({focus:()=>t.value.focus()}),(u,r)=>(s(),a("input",{class:"border-gray-300 focus:border-gray-700 focus:ring-gray-700 rounded-sm shadow-sm text-sm read-only:cursor-not-allowed read-only:bg-gray-200",value:e.modelValue,onInput:r[0]||(r[0]=l=>u.$emit("update:modelValue",l.target.value)),ref_key:"input",ref:t},null,40,k))}};export{B as _,S as a,V as b};
